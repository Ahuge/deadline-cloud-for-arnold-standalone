specificationVersion: 'jobtemplate-2023-09'
name: Default Arnold Job Template
parameterDefinitions:
- name: ArnoldSceneFile
  type: PATH
  objectType: FILE
  dataFlow: IN
  userInterface:
    control: CHOOSE_INPUT_FILE
    label: Arnold Scene File
    groupLabel: Arnold Settings
    fileFilters:
    - label: Arnold Scene Files
      patterns:
      - '*.ass'
    - label: All Files
      patterns:
      - '*'
  description: The Arnold scene file to render.
- name: Frames
  type: STRING
  userInterface:
    control: LINE_EDIT
    label: Frames
    groupLabel: Arnold Settings
  description: The frames to render. E.g. 1-3,8,11-15
  minLength: 1
- name: OutputFilePath
  type: PATH
  objectType: DIRECTORY
  dataFlow: OUT
  userInterface:
    control: CHOOSE_DIRECTORY
    label: Output File Path
    groupLabel: Arnold Settings
  description: The render output path.
- name: ArnoldErrorOnLicenseFailure
  type: STRING
  userInterface:
    control: CHECK_BOX
    label: Error on License Failure
    groupLabel: Arnold Settings
  description: Whether to produce an error when there is an Arnold license failure.
  default: "true"
  allowedValues:
    - "true"
    - "false"
- name: StrictErrorChecking
  type: STRING
  userInterface:
    control: CHECK_BOX
    label: Strict Error Checking
    groupLabel: Arnold Settings
  description: Fail when errors occur.
  default: 'true'
  allowedValues:
  - 'true'
  - 'false'
steps:
- name: Render
  parameterSpace:
    taskParameterDefinitions:
    - name: Frame
      type: INT
      range: '{{Param.Frames}}'
  stepEnvironments:
  - name: Arnold
    description: Runs Arnold in the background.
    script:
      embeddedFiles:
      - name: initData
        filename: init-data.yaml
        type: TEXT
        data: |
          scene_file: '{{Param.ArnoldSceneFile}}'
          output_file_path: '{{Param.OutputFilePath}}'
          error_on_arnold_license_fail: {{Param.ArnoldErrorOnLicenseFailure}}
      actions:
        onEnter:
          command: arnold-openjd
          args:
          - daemon
          - start
          - --path-mapping-rules
          - file://{{Session.PathMappingRulesFile}}
          - --connection-file
          - '{{Session.WorkingDirectory}}/connection.json'
          - --init-data
          - file://{{Env.File.initData}}
          cancelation:
            mode: NOTIFY_THEN_TERMINATE
        onExit:
          command: arnold-openjd
          args:
          - daemon
          - stop
          - --connection-file
          - '{{ Session.WorkingDirectory }}/connection.json'
          cancelation:
            mode: NOTIFY_THEN_TERMINATE
  script:
    embeddedFiles:
    - name: runData
      filename: run-data.yaml
      type: TEXT
      data: |
        frame: {{Task.Param.Frame}}
    actions:
      onRun:
        command: arnold-openjd
        args:
        - daemon
        - run
        - --connection-file
        - '{{ Session.WorkingDirectory }}/connection.json'
        - --run-data
        - file://{{ Task.File.runData }}
        cancelation:
          mode: NOTIFY_THEN_TERMINATE
